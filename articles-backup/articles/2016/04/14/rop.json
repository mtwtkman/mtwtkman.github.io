{"title": "\u9244\u9053\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092python\u3067", "body": "[Railway oriented programming](http://fsharpforfunandprofit.com/posts/recipe-part2/)\u3092\u53c2\u8003\u306bpython\u3067\u3082\u9244\u9053\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\nF#\u5168\u304f\u308f\u3089\u304b\u306a\u3044\u3051\u3069\u3001\u3069\u3046\u3084\u3089[\u5224\u5225\u5171\u7528\u4f53](https://msdn.microsoft.com/ja-jp/library/dd233226.aspx)\u3068\u3044\u3046\u3084\u3064\u3067\u51e6\u7406\u7d50\u679c\u306e\u578b\u3092\u6301\u3061\u56de\u308b\u3068\u3044\u3046\u3053\u3068\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u3093\u306a\u98a8\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```python\nfrom functools import partial\n\n\nclass TSuccess:\n    def __init__(self, result):\n        self.result = result\n\n    def __call__(self):\n        return self.result\n\n\nclass TFailure:\n    def __init__(self, msg):\n        self.msg = msg\n\n    def __call__(self):\n        return lambda : self.msg\n\n\ndef bind(switch_func, two_track_input):\n    if isinstance(two_track_input, TSuccess):\n        return switch_func(two_track_input())\n    elif isinstance(two_track_input, TFailure):\n        return two_track_input\n\n\ndef validate1(inp):\n    if inp.name == '':\n        return TFailure('input name.')\n    else:\n        return TSuccess(inp)\n\n\ndef validate2(inp):\n    if len(inp.name) > 50:\n        return TFailure('name length must be less than 50.')\n    else:\n        return TSuccess(inp)\n\n\ndef validate3(inp):\n    if inp.email == '':\n        return TFailure('input email.')\n    else:\n        return TSuccess(inp)\n\n\nclass Input:\n    def __init__(self, name, email):\n        self._name = name\n        self._email = email\n\n    @property\n    def name(self):\n        return self._name\n\n    @property\n    def email(self):\n        return self._email\n\n    def __call__(self):\n        return 'Success name={}, email={}'.format(self._name, self._email)\n\n\ndef combined_validation(inp):\n    result1 = validate1(inp)\n    result2 = bind(validate2, result1)\n    result3 = bind(validate3, result2)\n    return result3()()\n\n\nassert combined_validation(Input(name='', email='')) == 'input name.'\nassert combined_validation(Input(name='neko', email='')) == 'input email.'\nassert combined_validation(Input(name='neko', email='meow')) == 'Success name=neko, email=meow'\n```\n\nF#\u3067\u306f`Result`\u3068\u3044\u3046\u5224\u5225\u5171\u7528\u4f53\u306b`Success`\u3068`Failure`\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u578b\u306b\u3088\u3063\u3066\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3059\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001python\u3067\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\n\u3068\u3044\u3046\u304b\u3001\u3053\u308c\u3063\u3066\u3044\u308f\u3086\u308b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3060\u3068\u601d\u3046\u306e\u3067\u307e\u3042\u305d\u308c\u304c\u3067\u304d\u308c\u3070\u3044\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067`bind`\u3067\u5168\u3066\u3092\u4e38\u304f\u53ce\u3081\u305f\u611f\u304c\u3042\u308a\u307e\u3059\u3002", "publish": true, "tags": ["python"], "date": "2016/04/14 22:59:22", "slug": "rop"}